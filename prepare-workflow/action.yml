name: "Prepare build workflow action"
description: "Getting prepare for running builds"
inputs:
  package-name:
    description: 'package name'
    required: false
  manifest:
    description: Custom manifest file to overwrite default manifest exists in project
    required: false
  extra-init:
    description: Extra initialization code to run (javascript)
    required: false

runs:
  using: "composite"
  steps:
    - name: 'process env vars'
      run: |
        # Sanitize envvars by (in order)
        # 1. remove comments (start with #); 
        # 2. remove blank lines
        sed '/^#/d' envvars.env | awk NF > envvars.env.new
        rm envvars.env
        mv envvars.env.new envvars.env
        cat envvars.env >> $GITHUB_ENV
      working-directory: ${{ github.action_path }}
      shell: bash

    - name: 'process default branches json' 
      run: |
        # Default branches pulled from json file
        echo 'DEFAULT_BRANCHES_JSON_TEXT<<EOF' >> $GITHUB_ENV
        cat defaultBranches.json >> $GITHUB_ENV
        echo 'EOF' >> $GITHUB_ENV
      working-directory: ${{ github.action_path }}
      shell: bash

    - name: 'determine if we need to store current branch name or PR number'
      run: |
        if [[ -z "${{ github.event.pull_request.number }}" ]]; then
          # meaning the workflow is NOT triggered from pull_request 
          # sometimes user can manually trigger a workflow on a branch that a PR is open,
          # thus try to find out if a PR is opened against this running branch
          pr_num=$(curl -s -H "Accept: application/vnd.github.v3+json" https://api.github.com/repos/${{ github.repository }}/pulls?head=${{ github.repository_owner }}:${{ github.ref }} | jq -r '.[] | .number')
          if [[ -z "$pr_num" ]]; then
            echo CURRENT_BRANCH=${GITHUB_REF_NAME} >> $GITHUB_ENV
          else
            echo CURRENT_BRANCH=PR-$pr_num >> $GITHUB_ENV
          fi
        else
          echo CURRENT_BRANCH=PR-${{ github.event.pull_request.number }} >> $GITHUB_ENV
        fi
      shell: bash

    - name: 'grab current build number'
      run: echo BUILD_NUMBER=${{ github.run_number }} >> $GITHUB_ENV
      shell: bash

    - name: 'grab current branch name'
      run: echo BRANCH_NAME=${GITHUB_REF_NAME} >> $GITHUB_ENV
      shell: bash
    
    - name: 'overwrite jfrog build name'
      run: echo JFROG_CLI_BUILD_NAME=${{ github.event.repository.name }}/${{ env.CURRENT_BRANCH }} >> $GITHUB_ENV
      shell: bash
    
    - name: 'export github username and email'
      run: |
        git config --global user.name ${{ github.actor }}
        echo ${{ github.actor }}
        git config --global user.email dummy-email@email.com
      shell: bash

    - name: 'run generic setup'
      run: node 'dist/index.js'
      working-directory: ${{ github.action_path }}
      env:
        INPUT_PACKAGE_NAME: ${{ inputs.package-name }}
        INPUT_MANIFEST: ${{ inputs.manifest }}
        INPUT_EXTRA_INIT: ${{ inputs.extra-init }}
      shell: bash