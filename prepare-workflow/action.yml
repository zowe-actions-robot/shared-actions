name: "Prepare build workflow action"
description: "Getting prepare for running builds"
inputs:
  github-user:
    description: 'github user'
    required: false
  github-password:
    description: 'github password'
    required: false
  github-email:
    description: 'github email'
    required: false
  manifest:
    description: Custom manifest file to overwrite default manifest exists in project
    required: false
  extra-init:
    description: Extra initialization code to run (javascript)
    required: false

runs:
  using: "composite"
  steps:
    - name: 'process env vars'
      run: |
        # Sanitize envvars by (in order)
        # 1. remove comments (start with #); 
        # 2. remove blank lines
        sed '/^#/d' envvars.env | awk NF > envvars.env.new
        rm envvars.env
        mv envvars.env.new envvars.env
        cat envvars.env >> $GITHUB_ENV
      working-directory: ${{ github.action_path }}
      shell: bash

    - name: 'process default branches json' 
      run: |
        # Default branches pulled from json file
        echo 'DEFAULT_BRANCHES_JSON_TEXT<<EOF' >> $GITHUB_ENV
        cat defaultBranches.json >> $GITHUB_ENV
        echo 'EOF' >> $GITHUB_ENV
      working-directory: ${{ github.action_path }}
      shell: bash

    - name: 'determine current branch or PR'
      run: |
        if [ -z ${{ github.event.pull_request.number }} ]
        then
          echo CURRENT_BRANCH=${GITHUB_REF#refs/heads/} >> $GITHUB_ENV
        else
          echo CURRENT_BRANCH=PR-${{ github.event.pull_request.number }} >> $GITHUB_ENV
        fi
      shell: bash
    
    - name: 'overwrite jfrog build name'
      run: echo JFROG_CLI_BUILD_NAME=${{ github.event.repository.name }}/${{ env.CURRENT_BRANCH }} >> $GITHUB_ENV
      shell: bash
    
    - name: 'export github username and email'
      run: |
        if [ -n "${{ inputs.github-user }}" ]
        then
          git config --global user.name ${{ inputs.github-user }}
          echo GITHUB_USER=${{ inputs.github-user }} >> $GITHUB_ENV
        fi
        if [ -n "${{ inputs.github-email }}" ]
        then
          git config --global user.email ${{ inputs.github-email }}
        fi
        if [ -n "${{ inputs.github-password }}" ]
        then
          echo GITHUB_PASSWORD=${{ inputs.github-password }} >> $GITHUB_ENV
        fi
        echo GITHUB_REPOSITORY=${{ github.repository }} >> $GITHUB_ENV
      shell: bash

    - name: 'run generic setup'
      run: node 'dist/index.js'
      working-directory: ${{ github.action_path }}
      env:
        INPUT_MANIFEST: ${{ inputs.manifest }}
        INPUT_EXTRA_INIT: ${{ inputs.extra-init }}
      shell: bash